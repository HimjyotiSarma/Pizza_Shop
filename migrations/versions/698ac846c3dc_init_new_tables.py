"""init new Tables

Revision ID: 698ac846c3dc
Revises: 0f91c71c31da
Create Date: 2025-02-01 17:06:35.231406

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '698ac846c3dc'
down_revision: Union[str, None] = '0f91c71c31da'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=100), nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=100), nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('email')
    )
    op.create_table('items',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=250), nullable=False),
    sa.Column('description', sa.VARCHAR(length=250), nullable=False),
    sa.Column('sku', sa.VARCHAR(length=100), nullable=False),
    sa.Column('size', postgresql.ENUM('LARGE', 'MEDIUM', 'SMALL', name='order_size'), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('sku')
    )
    op.create_table('delivery_addresses',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('address_line_1', sa.VARCHAR(length=250), nullable=False),
    sa.Column('address_line_2', sa.VARCHAR(length=250), nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), nullable=True),
    sa.Column('postal_code', sa.VARCHAR(length=100), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('orders',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('delivery_type', postgresql.ENUM('HOME_DELIVERY', 'TAKEOUT', 'DINE_OUT', name='delivery_type'), nullable=False),
    sa.Column('order_status', postgresql.ENUM('PROCESSING', 'PREPARING', 'PACKING', 'HANDED_DELIVERY', 'DELIVERED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('address_id', sa.UUID(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['delivery_addresses.uid'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_table('delivery_addresses')
    op.drop_table('items')
    op.drop_table('customers')
    # ### end Alembic commands ###
