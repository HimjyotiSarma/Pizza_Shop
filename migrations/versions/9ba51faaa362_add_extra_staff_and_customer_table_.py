"""Add Extra Staff and Customer Table along with additional User Table

Revision ID: 9ba51faaa362
Revises: b8154367acd9
Create Date: 2025-03-02 09:29:34.365212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9ba51faaa362'
down_revision: Union[str, None] = 'b8154367acd9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=100), nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=100), nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), nullable=False),
    sa.Column('role', postgresql.ENUM('CUSTOMER', 'STAFF', 'ADMIN', name='user_roles'), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('staffs',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_title', postgresql.ENUM('KITCHEN', 'DELIVERY', 'WAITER', 'MANAGER', name='staff_roles'), nullable=False),
    sa.Column('hire_date', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('salary', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.add_column('customers', sa.Column('user_id', sa.UUID(), nullable=False))
    op.drop_constraint('customers_email_key', 'customers', type_='unique')
    op.drop_constraint('customers_password_hash_key', 'customers', type_='unique')
    op.drop_constraint('customers_phone_key', 'customers', type_='unique')
    op.create_foreign_key(None, 'customers', 'users', ['user_id'], ['uid'], ondelete='CASCADE')
    op.drop_column('customers', 'firstname')
    op.drop_column('customers', 'updated_at')
    op.drop_column('customers', 'password_hash')
    op.drop_column('customers', 'phone')
    op.drop_column('customers', 'lastname')
    op.drop_column('customers', 'email')
    op.drop_column('customers', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('customers', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('customers', sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('customers', sa.Column('lastname', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('customers', sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('customers', sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('customers', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('customers', sa.Column('firstname', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'customers', type_='foreignkey')
    op.create_unique_constraint('customers_phone_key', 'customers', ['phone'])
    op.create_unique_constraint('customers_password_hash_key', 'customers', ['password_hash'])
    op.create_unique_constraint('customers_email_key', 'customers', ['email'])
    op.drop_column('customers', 'user_id')
    op.drop_table('staffs')
    op.drop_table('users')
    # ### end Alembic commands ###
